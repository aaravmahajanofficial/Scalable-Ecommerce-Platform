run:
  timeout: 5m
  go: "1.24.2"
  issues:
    exclude-dirs:
      - vendor
      - node_modules
  fast: true

linters:
  enable:
    - govet # Examines Go source code and reports suspicious constructs
    - staticcheck # Go static analysis, applying a ton of rules
    - errcheck # Ensures that errors are handled
    - gocyclo # Computes and checks the cyclomatic complexity of functions
    - revive # Fast, configurable, extensible, flexible linter for Go
    - gofmt # Checks if code was gofmt-ed
    - goimports # Checks import statements are formatted according to goimports
    - bodyclose # Checks whether HTTP response bodies are closed
    - gosec # Inspects source code for security problems
    - unused # Checks for unused constants, variables, functions and types
    - nilnil # Checks that there is no simultaneous return of nil error and an invalid value

linters-settings:
  exhaustruct:
    exclude:
      - ".*_test\\.go"
      - "^testing\\.T$"
  errcheck:
    check-type-assertions: true
    check-blank: true
  staticcheck:
    checks: ["all", "-SA1019"]
  gocyclo:
    min-complexity: 20
  revive:
    rules:
      - name: var-naming
        severity: warning
      - name: empty-block
        severity: error
      - name: unused-parameter
        severity: warning
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
    disabled-checks:
      - commentFormatting

issues:
  exclude-patterns:
    - ".*_generated\\.go"
    - ".*_test\\.go"
  exclude-rules:
    - path: "vendor/.*"
      linters:
        - all
    # Don't check test files with certain linters
    - path: "_test\\.go"
      linters:
        - gosec
        - errcheck
  # Limit the number of issues per linter
  max-issues-per-linter: 50
  max-same-issues: 10

output:
  formats: colored-line-number
  sort-results: true
  print-issued-lines: true
  print-linter-name: true
